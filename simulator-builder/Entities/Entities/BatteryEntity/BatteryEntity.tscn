[gd_scene load_steps=8 format=2]

[ext_resource path="res://Systems/Power/PowerReceiver.gd" type="Script" id=1]
[ext_resource path="res://Systems/Power/PowerSource.gd" type="Script" id=2]
[ext_resource path="res://Entities/Entities/BatteryEntity/BatteryEntity.gd" type="Script" id=3]
[ext_resource path="res://Shared/tileset.svg" type="Texture" id=4]
[ext_resource path="res://Shared/battery_indicator.png" type="Texture" id=5]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

//A percentage from 0 to 1 for how full the battery is.
uniform float amount : hint_range(0, 1) = 0.0;

void fragment() {
    //We sample the texture as a mask to later change the indicator's color based on its fill rate.
  vec4 mask = texture(TEXTURE, UV);
    //We only need the texture's red channel. The rest, black or transparent, is of
  //no interest.
  float masking_area = mask.r;
    
    //We Set the percentage of the UV sampling along the X-axis to either 0 or 1,
  //based on how full the battery is. If `amount` is `0.5`, we want the bar to be half full.
  float uv_percentage = step(UV.x, amount);
    
    //We draw the output pixel using the sprite's `modulate` color and mask out part of it.
  COLOR = vec4(MODULATE.rgb, uv_percentage * masking_area);
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/amount = 0.0

[node name="BatteryEntity" type="StaticBody2D" groups=["power_receivers", "power_sources"]]
script = ExtResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 4 )
region_enabled = true
region_rect = Rect2( 339, 119, 102, 82 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( 0, 40, -49, 15, -49, 3, 0, -21, 49, 1, 49, 15 )

[node name="PowerSource" type="Node" parent="."]
script = ExtResource( 2 )
power_amount = 200.0
output_direction = 4

[node name="PowerReceiver" type="Node" parent="."]
script = ExtResource( 1 )
power_required = 200.0

[node name="Indicator" type="Sprite" parent="."]
modulate = Color( 1, 0, 0, 1 )
material = SubResource( 2 )
position = Vector2( -23.5, -3 )
scale = Vector2( 0.65625, 0.648649 )
texture = ExtResource( 5 )

[connection signal="power_update" from="PowerSource" to="." method="_on_PowerSource_power_update"]
[connection signal="received_power" from="PowerReceiver" to="." method="_on_PowerReceiver_received_power"]
